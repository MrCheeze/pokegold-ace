phonecalls = [
(0x0000, 0x00, 0x000000),
(0x4190, 0x04, 0x4141E1),
(0x4190, 0x04, 0x4141E1),
(0x4190, 0x04, 0x4141E1),
(0x4190, 0x04, 0x4141E1),
(0x419F, 0x04, 0x4141E1),
(0x419F, 0x02, 0x414A80),
(0x419F, 0x01, 0x414124),
(0x4190, 0x04, 0x4141E1),
(0x2A4C, 0x46, 0x900716),
(0x6641, 0x50, 0x4C4633),
(0x1690, 0x28, 0x415066),
(0x3C4C, 0x46, 0x904616),
(0x6641, 0x50, 0xF0F5AC),
(0x013E, 0xE0, 0xAC003E),
(0xCDEA, 0xC1, 0x3EEA10),
(0xC1A7, 0x3E, 0x00A9EA),
(0x3EC1, 0x00, 0xEAC1AA),
(0x080E, 0xCD, 0x3CCD03),
(0x03B1, 0xCD, 0xCFCD0E),
(0x30FF, 0xAF, 0xE0CDD6),
(0x0D9E, 0x11, 0xC42148),
(0x9000, 0x01, 0x01CD24),
(0x0E38, 0x11, 0xCC2148),
(0x9010, 0x01, 0x01CD24),
(0x0E38, 0x11, 0xD42148),
(0x9020, 0x01, 0x01CD24),
(0x0E38, 0xCD, 0x4CCD47),
(0x344C, 0xCD, 0x772103),
(0x483D, 0xCD, 0x5E210F),
(0xC508, 0x01, 0x32AF00),
(0x4CCD, 0x31, 0x3EEA0A),
(0xC51C, 0x21, 0x42CD48),
(0x0F5E, 0x21, 0x2F01C4),
(0x020F, 0xCD, 0xEF210E),
(0xC437, 0x36, 0x017321),
(0x36C4, 0x02, 0x21C458),
(0xA7CD, 0x47, 0x0ECD0A),
(0x033C, 0xCD, 0x08CD0A),
(0x475E, 0x30, 0xF81CFA),
(0xEAC5, 0x7F, 0xCF4CCD),
(0x2147, 0x4F, 0x485ECD),
(0xCD0F, 0x41, 0x1C0530),
(0x4CCD, 0x47, 0x1821BB),
(0x4863, 0xCD, 0x5E210F),
(0xC437, 0x01, 0x07CD02),
(0x0EEF, 0x21, 0x3B36C4),
(0x2101, 0x77, 0xC40236),
(0x6021, 0xC4, 0xCD4822),
(0x0A0E, 0xCD, 0x3CCD03),
(0x0A08, 0xCD, 0xD93047),
(0xFAF8, 0x26, 0xC580EA),
(0xCDCF, 0x4C, 0x476D21),
(0xCD48, 0x5E, 0x0F41CD),
(0x301C, 0x05, 0xCD474C),
(0xBB18, 0xCD, 0x192105),
(0x4881, 0xCD, 0x5ECD0F),
(0x0A31, 0xF1, 0xE0C9AC),
(0xE0AF, 0xD6, 0x21C3A0),
(0x6801, 0x01, 0xAF4CCD),
(0x3E31, 0x01, 0xE0C9D6),
(0xA9F0, 0xE6, 0x014120),
(0xAB21, 0xFF, 0x7E40E6),
(0x1720, 0x7E, 0xE62080),
(0xCD05, 0x2E, 0x03C9A7),
(0x1C21, 0xC5, 0x7E20A7),
(0x3E02, 0x18, 0x3D1877),
(0x210C, 0x1C, 0xC5FE7E),
(0x3817, 0x02, 0x3E3CFF),
(0x2177, 0x58, 0xC47F3E),
(0x0F01, 0x00, 0xCD314C),
(0x5821, 0xC4, 0xCD47A7),
(0x4CCD, 0x34, 0xA737C9),
(0xE5C9, 0xFA, 0x1C4FC5),
(0x545D, 0xCD, 0x0F234B),
(0x4711, 0x48, 0xCD0F74),
(0xC9E1, 0x62, 0x6BCDE5),
(0x47A7, 0xD1, 0x133E13),
(0x129C, 0x13, 0xD50321),
(0x1900, 0x1A, 0x131A22),
(0xE177, 0xCD, 0x222348),
(0x2323, 0xC9, 0xF0E6A9),
(0x2001, 0x41, 0x21FFAB),
(0xE67E, 0x40, 0x207E17),
(0x80E6, 0x20, 0x052ECD),
(0xA703, 0xC9, 0x21C526),
(0xA77E, 0x20, 0x023C3E),
(0x773D, 0x18, 0x0C2621),
(0x7EC5, 0xFE, 0x3B0238),
(0xFF3E, 0x3C, 0x776021),
(0x3EC4, 0x7F, 0x010007),
(0x4CCD, 0x31, 0x21C460),
(0x22CD, 0x48, 0xCD344C),
(0xC9A7, 0x37, 0xC92611),
(0xCDC5, 0x30, 0x481123),
(0x4868, 0xCD, 0x74C90F),
(0x3EE5, 0x7F, 0x22E177),
(0x0201, 0x41, 0xCD323D),
(0x16C9, 0x4F, 0x415064),
(0x9E16, 0x41, 0x64AE50),
(0xA2E0, 0xAB, 0xAEAAA2),
(0x1650, 0xB0, 0x410864),
(0xE121, 0xC4, 0xCD47A7),
(0x5E21, 0x48, 0xC9B816),
(0x6441, 0x50, 0x1641BB),
(0x5064, 0xAC, 0xA8E8AD),
(0x1650, 0xCE, 0x410864),
(0xBF21, 0xC4, 0xCD4822),
(0x7C21, 0x48, 0xC9D616),
(0x6441, 0x50, 0x08B911),
(0xFAC4, 0x1C, 0xC5CD4F),
(0x4B0F, 0x36, 0x9C1123),
(0xC526, 0x01, 0x02CD81),
(0x323D, 0x44, 0x4D1CFA),
(0xFEC5, 0x04, 0x38FE08),
(0x380B, 0x08, 0xFE3812),
(0x2108, 0xBF, 0x4821C9),
(0x48B5, 0xC9, 0x2148BA),
(0x16C9, 0xD9, 0x415064),
(0xE916, 0x41, 0x641650),
(0x4202, 0x64, 0x50FFFF),
(0xFFFF, 0xFF, 0xFFFFFF),
(0x1800, 0x18, 0x3C7E3C),
(0x007E, 0x00, 0x7E3C7E),
(0x183C, 0x18, 0x00ACF0),
(0x3EF5, 0x01, 0xE011AC),
(0x48CC, 0x21, 0xF0018E),
(0x2401, 0xCD, 0x38110E),
(0x48D4, 0x21, 0x50018F),
(0x2401, 0xCD, 0x38AF0E),
(0xEDEA, 0xCE, 0x21C490),
(0x1201, 0x04, 0xCD0EEF),
(0xE0CD, 0x1B, 0x214A06),
(0x5ECD, 0x0F, 0x21C3E5),
(0x0901, 0x02, 0xCD0EEF),
(0xEA21, 0xC3, 0x3621EF),
(0xC426, 0x36, 0xF50E21),
(0xCDC4, 0xA5, 0x4972CD),
(0x0E34, 0x0A, 0xCD033C),
(0x08CD, 0x0A, 0xCD495B),
(0xF830, 0xCD, 0xA4CD1A),
(0x196F, 0x21, 0x0BCD4A),
(0x0F5E, 0xCD, 0x41381C),
(0xFAB4, 0xED, 0xCE7EEA),
(0xCDCF, 0x24, 0x059ECD),
(0xF10D, 0xE0, 0xACF0C9),
(0xE6A9, 0x01, 0x283702),
(0x21C9, 0xAB, 0xFFE67E),
(0x2040, 0x17, 0x7E80E6),
(0x0520, 0xCD, 0x2EA703),
(0x21C9, 0xED, 0xCEA77E),
(0x0220, 0x3E, 0x07773D),
(0x0C18, 0x21, 0xED7ECE),
(0x06FE, 0x38, 0x02FF3E),
(0x773C, 0xAF, 0xE021D6),
(0xC3FA, 0x01, 0x09CD02),
(0x0EBD, 0x21, 0x0ECDC4),
(0x49A5, 0xCD, 0x4CA734),
(0xE5C9, 0xFA, 0xED5FCE),
(0x0016, 0x21, 0xB91949),
(0x2A19, 0x56, 0x5FCDE1),
(0x0F74, 0xC9, 0xC9D149),
(0xD949, 0x49, 0xE2EC49),
(0xF549, 0x49, 0xFDC949),
(0x7F49, 0x92, 0x94838D),
(0x9880, 0x50, 0x7F8E8C),
(0x838D, 0x80, 0x987F50),
(0x9493, 0x84, 0x928083),
(0x5098, 0x96, 0x848D83),
(0x9284, 0x83, 0x805098),
(0x8793, 0x94, 0x918392),
(0x9880, 0x50, 0x7F9185),
(0x8388, 0x80, 0x989250),
(0x9380, 0x94, 0x918083),
(0x5098, 0x16, 0x1C6442),
(0x0850, 0x21, 0xB9CDC4),
(0x49A5, 0x21, 0x16C94A),
(0x2D16, 0x42, 0x64FA50),
(0xD1E8, 0xCB, 0xFFE8EA),
(0x3ED1, 0x44, 0xCD2E49),
(0xB921, 0xC4, 0x010312),
(0xBDCD, 0x0E, 0x214A38),
(0x72CD, 0x12, 0xC9CD08),
(0x0467, 0xF0, 0x96F047),
(0x4F98, 0x11, 0xB93EC4),
(0x2170, 0x1F, 0x4A21CF),
(0x4A4F, 0xC9, 0x164905),
(0x5066, 0xFA, 0xE8CBD1),
(0xEABF, 0xE8, 0xD1443E),
(0x49CD, 0x2E, 0x21C4B9),
(0x1201, 0x03, 0xCD0EBD),
(0x7121, 0x4A, 0xCD1272),
(0x08C9, 0xCD, 0x67F004),
(0x4796, 0xF0, 0x98114F),
(0xC4B9, 0x3E, 0x701F21),
(0xCF4A, 0x21, 0x88C94A),
(0x1816, 0x49, 0x662150),
(0xC4B9, 0x01, 0x12CD03),
(0x0EBD, 0x21, 0x9DCD4A),
(0x1272, 0xC9, 0x0867CD),
(0x2104, 0xB9, 0xC49136),
(0x3623, 0x93, 0x237F36),
(0x1123, 0x90, 0xFFF4CD),
(0x214A, 0xE1, 0xC48336),
(0x3623, 0x85, 0x237F36),
(0x1123, 0xDC, 0xD1F4CD),
(0x364A, 0x7F, 0x23E8FA),
(0xCBD1, 0x7F, 0x283608),
(0x238E, 0x36, 0x8D1823),
(0x3609, 0x8E, 0x238536),
(0x3623, 0x85, 0x23E421),
(0xC94A, 0x00, 0x51AE8D),
(0x7FB6, 0xAE, 0xAD837F),
(0x8184, 0x94, 0x865875),
(0x0301, 0x01, 0xCD323D),
(0xE836, 0x23, 0x130201),
(0xCD81, 0x3D, 0x329C36),
(0x1323, 0x01, 0x02CD81),
(0x323D, 0xC9, 0x6BC562),
(0x29CD, 0x4B, 0xCD0F74),
(0x6069, 0x23, 0xC150CD),
(0xEA4B, 0x51, 0xD15111),
(0xCDD1, 0x30, 0x4879C9),
(0x04FE, 0x38, 0x080AFE),
(0x0838, 0xFE, 0x120838),
(0x4211, 0x4B, 0xC94711),
(0xC94B, 0x11, 0x4CC94B),
(0x888D, 0x93, 0x848C50),
(0x918E, 0x8D, 0x508083),
(0x5098, 0x79, 0xB70728),
(0x0CFE, 0xD8, 0xC80CD6),
(0x3EC9, 0x0C, 0xC99921),
(0x7ED1, 0xF5, 0xCBF0E6),
(0xF5AC, 0x3E, 0x01ACE0),
(0xE5FA, 0xCF, 0xF5EAAF),
(0xCFE5, 0xCD, 0xBBCD4B),
(0x032E, 0xCD, 0x67CD04),
(0x0A08, 0xFA, 0x63CBCE),
(0x207F, 0x0E, 0xCD4ECD),
(0x233E, 0x21, 0x8ACF51),
(0x2ECD, 0x03, 0x1811E5),
(0x0008, 0xCD, 0x24CD3E),
(0x3E56, 0xF1, 0xEACFE5),
(0xE0F1, 0xAC, 0xF199EA),
(0xCDD1, 0x49, 0x34E0AF),
(0x3ED8, 0x98, 0xE03ED9),
(0xE090, 0xD4, 0xCD5451),
(0xCDC9, 0x49, 0x34CFCD),
(0xCD0E, 0xFF, 0x3032CD),
(0xAF04, 0xE0, 0xD2D1E0),
(0x073E, 0xE0, 0xD31FCD),
(0x3E4C, 0x23, 0x215174),
(0xCDCF, 0xFC, 0x4C083E),
(0x92CD, 0x3E, 0x3EE0E3),
(0xCD40, 0x3A, 0x4DEAAF),
(0xCE63, 0xEA, 0x64EACE)]

destinations = []
for i, x in enumerate(phonecalls):
    addr = x[0]
    if (0xE000 <= addr <= 0xFDFF):
        addr -= 0x2000
    if (0xC000 <= addr <= 0xDFFF):
        destinations.append('%04X: %02X - %06X' % (addr,i,x[2]))
for x in sorted(destinations):
    print(x)
